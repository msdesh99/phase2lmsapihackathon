<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="21" passed="19" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-01T19:52:32 GMT-04:00" name="Default suite" finished-at="2024-04-01T19:52:51 GMT-04:00" duration-ms="19265">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2024-04-01T19:52:32 GMT-04:00" name="Default test" finished-at="2024-04-01T19:52:51 GMT-04:00" duration-ms="19265">
      <class name="phase2lmsapihackathon.runner.GetUserRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:32 GMT-04:00" name="setUpClass" finished-at="2024-04-01T19:52:33 GMT-04:00" duration-ms="732" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4db10b9f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:33 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:39 GMT-04:00" duration-ms="5640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking EndPoints: [GetAllUsers,GetAllRoles,GetAllUsersWithRole,GetUsersByRoleIdV2]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:39 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:39 GMT-04:00" duration-ms="393" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking EndPoints: [GetAllUsers,GetAllRoles,GetAllUsersWithRole,GetUsersByRoleIdV2]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:39 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:41 GMT-04:00" duration-ms="1668" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking EndPoints: [GetAllUsers,GetAllRoles,GetAllUsersWithRole,GetUsersByRoleIdV2]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:41 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:42 GMT-04:00" duration-ms="1840" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking EndPoints: [GetAllUsers,GetAllRoles,GetAllUsersWithRole,GetUsersByRoleIdV2]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:42 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:43 GMT-04:00" duration-ms="947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints [GetUserByUserId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:43 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:44 GMT-04:00" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:44 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:44 GMT-04:00" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:44 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:44 GMT-04:00" duration-ms="226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:44 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:44 GMT-04:00" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:44 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:45 GMT-04:00" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:45 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:45 GMT-04:00" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:45 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:45 GMT-04:00" duration-ms="226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:45 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:45 GMT-04:00" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:45 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:46 GMT-04:00" duration-ms="791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:46 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:47 GMT-04:00" duration-ms="613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:47 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:47 GMT-04:00" duration-ms="231" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Checking Endpoints: [GetUsersByProgramBatchId,GetUserByProgramId,GetUsersByStatus,GetUsersByRoleId]"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Check Users"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:47 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:48 GMT-04:00" duration-ms="745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["user updating using positive scenario"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Title of your feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:48 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:49 GMT-04:00" duration-ms="952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["update user role id"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Title of your feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:49 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:50 GMT-04:00" duration-ms="1654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["update user by role status"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Title of your feature"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:50 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:51 GMT-04:00" duration-ms="468" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update User Login by userid"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Title of your feature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <500>.

On fail message: Actual message: io.restassured.internal.RestAssuredResponseImpl@3ce4eb42]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <500>.

On fail message: Actual message: io.restassured.internal.RestAssuredResponseImpl@3ce4eb42
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor242.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at phase2lmsapihackathon.steps.PutUserRequestStep.validate_response(PutUserRequestStep.java:227)
at phase2lmsapihackathon.steps.PutUserRequestStep.user_sends_scenarios_for_login_status_reads_data_from_excel(PutUserRequestStep.java:182)
at ✽.User sends "updateuserlogin" scenarios "PUTUpdateLoginStatus" for loginStatus reads data from excel "PutUserLogin"(file:///C:/eclipse/eclipse-workspace/NumpyNinja-APITest/phase2lmsapihackathon/src/test/resources/features/user/CputUserRequest.feature:28)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:51 GMT-04:00" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2024-04-01T19:52:51 GMT-04:00" duration-ms="396" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Update User ProgramBatch Status"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Title of your feature"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <400>.

On fail message: Actual message: io.restassured.internal.RestAssuredResponseImpl@39dee5fd]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <400>.

On fail message: Actual message: io.restassured.internal.RestAssuredResponseImpl@39dee5fd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor242.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at phase2lmsapihackathon.steps.PutUserRequestStep.validate_response(PutUserRequestStep.java:227)
at phase2lmsapihackathon.steps.PutUserRequestStep.user_sends_scenarios_for_program_batch_status_reads_data_from_excel(PutUserRequestStep.java:209)
at ✽.User sends "updateuserprogrambatch" scenarios "PUTUpdateRoleProgramBatch" for programBatchStatus reads data from excel "UserRoleProgramBatchStatus"(file:///C:/eclipse/eclipse-workspace/NumpyNinja-APITest/phase2lmsapihackathon/src/test/resources/features/user/CputUserRequest.feature:34)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:phase2lmsapihackathon.runner.GetUserRunner@5386659f]" started-at="2024-04-01T19:52:51 GMT-04:00" name="tearDownClass" finished-at="2024-04-01T19:52:51 GMT-04:00" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- phase2lmsapihackathon.runner.GetUserRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
